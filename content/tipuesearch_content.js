var tipuesearch = {"pages": [{'title': 'First', 'text': '\n', 'tags': '', 'url': 'First.html'}, {'title': 'Brython', 'text': '======= \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'About', 'text': '  \n https://41123123.github.io/cad2023 \n https://s1511.cycu.org/~w8/cad2023/ \n Brython \n >>>>>>> 1a558b5307b55ef420305f1007c43376a0641521 \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'homework', 'text': '檔案 \n', 'tags': '', 'url': 'homework.html'}, {'title': '專案一', 'text': '\n', 'tags': '', 'url': '專案一.html'}, {'title': '零件1', 'text': '\n', 'tags': '', 'url': '零件1.html'}, {'title': '零件2', 'text': '\n', 'tags': '', 'url': '零件2.html'}, {'title': '零件3', 'text': '\n', 'tags': '', 'url': '零件3.html'}, {'title': '零件4', 'text': '\n', 'tags': '', 'url': '零件4.html'}, {'title': '專案三', 'text': '軌道的繪圖過程 \n \n \n', 'tags': '', 'url': '專案三.html'}, {'title': '網站', 'text': 'https://41123123.github.io/cad2023 \n', 'tags': '', 'url': '網站.html'}, {'title': '維護方法', 'text': '', 'tags': '', 'url': '維護方法.html'}, {'title': 's1511', 'text': '1.開啟ssh_cad學號.bat \n 2.輸入密碼(學校email) \n 3.輸入 cd cad2023 \n 4.輸入python3 server.py並 成功執行， \n 5.進入 https://s1511.cycu.org:8136 \n 6.登入進去並且進行更新 \n 7.更新完轉靜態(convert)，按下acp並且輸入備註', 'tags': '', 'url': 's1511.html'}, {'title': 'Replit', 'text': '1.完成更新內容點擊save \n 2. convert轉成靜態網站 \n 3.到replit點擊Git \n 4.在update輸入框中輸入更新內容的名稱 \n 5.點擊stage&commit \n 6.點擊push', 'tags': '', 'url': 'Replit.html'}, {'title': '自我評分', 'text': '自評分數:60 \n A: 是否按照進度明確標示倉儲的改版歷程 \n 答:是 \n B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 \n 答:是 \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 \n 答:是(使用Replit、s1511.cycu.org 成功) \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 \n 答:是(使用SOLIDWORKS) \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載 \n 答:是 \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim \n 答:是 \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 \n 答:否 \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬 \n 答:否 \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬 \n 答:(完成繪圖) \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載 \n 答:還未 \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬 \n 答:還未 \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答 \n 答:還未 \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': '自我評分.html'}]};